version: '3.8'

volumes:
  pg_diplom:

services:

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: poland
    ports:
      - "5434:5432"

  authservice:
    container_name: auth
    restart: always
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/poland
      USER: postgres
      PASSWORD: postgres

  personservice:
    container_name: person
    build:
      context: ./clients
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/poland
      USER: postgres
      PASSWORD: postgres

  publicapiservice:
    container_name: public
    build:
      context: ./public
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/poland
      USER: postgres
      PASSWORD: postgres

  producerservice:
    container_name: producer
    build:
      context: ./producer
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/poland
      USER: postgres
      PASSWORD: postgres

  adminservice:
    container_name: admin
    build:
      context: ./admin
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - "C:\\images:/opt/app/images" # C:\\images заменить на путь до папки в своей системе # your computers directory : dockers directory
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      DB: jdbc:postgresql://postgres:5432/poland  # Используем имя сервиса вместо localhost
      USER: postgres
      PASSWORD: postgres
      PATH_TO_IMG:  images/


  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
    depends_on:
      - zookeeper

  react:
    build:
      context: ./front 2
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - authservice
      - personservice
      - publicapiservice
      - producerservice
      - adminservice
    volumes:
      - "C:\\images:/app/dist/images" # C:\\images заменить на путь до папки в своей системе (одинаковый с adminservice)
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "preview"]