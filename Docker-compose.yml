volumes:
  pg_diplom:

services:

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: mihail
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: diplom
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5434:5432"

  auth_service:
    container_name: auth
    restart: always
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/diplom  # Используем имя сервиса вместо localhost
      USER: mihail
      PASSWORD: postgres


  person_service:
    container_name: person
    build:
      context: ./clients
      dockerfile: Dockerfile
    ports:
      - "8091:8091"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/diplom
      USER: mihail
      PASSWORD: postgres

  public-api_service:
    container_name: public
    build:
      context: ./public
      dockerfile: Dockerfile
    ports:
      - "8092:8092"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/diplom  # Используем имя сервиса вместо localhost
      USER: mihail
      PASSWORD: postgres

  producer_service:
      container_name: producer
      build:
         context: ./producer
         dockerfile: Dockerfile
      ports:
        - "9090:9090"
      depends_on:
        - postgres
      environment:
        SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
        URI: jdbc:postgresql://postgres:5432/diplom  # Используем имя сервиса вместо localhost
        USER: mihail
        PASSWORD: postgres

  admin_service:
    container_name: admin
    build:
      context: ./admin
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      URI: jdbc:postgresql://postgres:5432/diplom  # Используем имя сервиса вместо localhost
      USER: mihail
      PASSWORD: postgres


  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
    depends_on:
      - zookeeper